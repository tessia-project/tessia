bootloader:
  stopOnBootMenu: false

user:
  fullName: "{{ config['credentials']['admin-user'] }}"
  userName: "{{ config['credentials']['admin-user'] }}"
  password: "{{ config['sha512rootpwd'] }}"
  hashedPassword: true

root:
    userName:  "{{ config['credentials']['admin-user'] }}"
    password: "{{ config['sha512rootpwd'] }}"
    hashedPassword: true
    autologin: false

software:
  patterns: ["cockpit"]
  packages: ["openssh-server-config-rootlogin", "kdump", "git", "wget", "rsync", "make", "gcc"]
  extraRepositories: [
      {
        alias: "{{config["repos"][0]['os']}}-debuginfo",
        url: "{{config["repos"][0]['url'].replace('/DVD/', '/DVD_debuginfo')}}",
        name: "{{config["repos"][0]['url'].replace('/DVD/', '/DVD_debuginfo')}}",
        enabled: true,
        allowUnsigned: true
      },
      {
        alias: "{{config["repos"][0]['os']}}-source",
        url: "{{config["repos"][0]['url'].replace('/DVD/', '/DVD_SRC')}}",
        name: "{{config["repos"][0]['url'].replace('/DVD/', '/DVD_SRC')}}",
        enabled: false,
        allowUnsigned: true
      }

    ]

product:
  id: SLES

storage:
  boot:
    configure: true
  drives:
    {% for volume in config['svols'] %}
    - search:
        condition:
          name: {{ volume['system_attributes']['device'] }}
        ifNotFound: error
      {% set partitions = volume['part_table']['table'] %}
      {% if partitions %}
      partitions:
        {% for each_partition in partitions %}
        - filesystem:
            reuseIfPossible: false
            path: {% if each_partition['mp'] and each_partition['mp'] != 'null' %}{{ each_partition['mp'] }}{% else %}swap{% endif %}
            mountOptions: []
            mkfsOptions: []
            type: {{ each_partition['fs'] }}
          size:
            min: 1
            max: {{ each_partition['size'] * 1024 * 1024 }}
        - search:
            ifNotFound: skip
          delete: true
        {% endfor %}
      {% else %}
      partitions: []
      {% endif %}
    {% endfor %}
  volumeGroups: []

network:
  connections:
    {% for iface in config['ifaces'] %}
    - id: {{ iface['osname'] }}
      method4: manual
      gateway4: {{ iface['gateway'] }}
      method6: disabled
      addresses:
        - {{ iface['ip'] }}/{{ iface['mask_bits'] }}
      nameservers:
        - {{ iface['dns_1'] }}
      ignoreAutoDns: false
      interface: {{ iface['osname'] }}
      status: up
      autoconnect: true
      persistent: true
    {% endfor %}

localization:
  language: en_US.UTF-8
  keyboard: us
  timezone: Europe/Berlin

scripts:
  pre:
    - name: activate-multipath
      content: |
        #!/usr/bin/bash
        systemctl start multipathd.socket multipathd.service
  post:
    - name: enable-sshd-kdump
      chroot: true
      content: |
        systemctl enable --now sshd
        systemctl enable kdump-commandline.service
        systemctl enable kdump
        kdumptool commandline -u