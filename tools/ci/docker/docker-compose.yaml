version: '2.1'

services:
  server:
    image: tessia-server:${TESSIA_DOCKER_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME:-tessia}_server_1
    environment:
      # for production use one should create an override compose file
      # and set these variables
      TESSIA_DB_AUTOMANAGE: "true"
      TESSIA_DB_URI: "postgresql://tessia:pass4tessia@db/tessia"
      TESSIA_DB_TEST_URI: "postgresql://tessia:pass4tessia@db/tessia_test"
      TESSIA_MEDIATOR_URI: "redis://tessia:pass4tessia@mediator:6379/0"
      TESSIA_LIVE_IMG_PASSWD: ${TESSIA_LIVE_IMG_PASSWD:-livepasswd}
      TESSIA_SERVER_FQDN: ${TESSIA_SERVER_FQDN:-server}
      TESSIA_EXECUTOR_IMAGE: tessia-server:${TESSIA_DOCKER_TAG:-latest}
      TESSIA_COMPOSE_NAME: ${COMPOSE_PROJECT_NAME:-tessia}
    hostname: ${TESSIA_SERVER_FQDN:-server}
    ports:
      - 80:80
      - 5000:5000
      - 7223:7223
    networks:
      - cli_net
      - db_net
    volumes:
      - server-etc:/etc/tessia
      - server-jobs:/var/tessia/jobs
      - server-static:/var/tessia/www
      - /var/run/docker.sock:/var/run/docker.sock
    restart: "always"
    depends_on:
      - db
      - mediator
  db:
    image: postgres:alpine
    environment:
      POSTGRES_INITDB_ARGS: "-E UTF8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8"
      # for production use one should create an override compose file
      # and set these variables
      POSTGRES_PASSWORD: pass4tessia
      POSTGRES_USER: tessia
    networks:
      - db_net
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: "always"
  mediator:
    image: redis:alpine
    environment:
      # for production use one should create an override compose file
      # and set these variables
      REDIS_CONFIG: |
        save 900 1
        rdbchecksum yes
        user tessia on +@all -@dangerous -@admin +flushdb allkeys >pass4tessia
    entrypoint:
      /bin/sh -c "echo \"$$REDIS_CONFIG\" > /etc/redis.conf; redis-server /etc/redis.conf"
    networks:
      - db_net
    volumes:
      - md-data:/data
    restart: "always"
  cli:
    image: tessia-cli:${TESSIA_DOCKER_TAG:-latest}
    environment:
      TESSIA_SERVER_URL: https://${TESSIA_SERVER_FQDN:-server}:5000
    hostname: tessia-cli
    networks:
      - cli_net
    # allow the client to reach the server via its fqdn
    links:
      - server:${TESSIA_SERVER_FQDN:-server}
    tty: true
    stdin_open: true
    restart: "always"
    depends_on:
      - db
      - server

networks:
  cli_net:
  db_net:

volumes:
  db-data:
  md-data:
  server-etc:
  server-jobs:
  server-static:
