variables:
  GIT_STRATEGY: fetch
  # replace by CI_COMMIT_SHA when gitlab gets updated to 9.0+
  COMMIT_SHA: $CI_BUILD_REF
  REGISTRY: tessia-dev.domain.com:5000

stages:
  - prepare
  - build
  - unittests
  - clitests
  - push
  - cleanup

prepare:
  stage: prepare
  script:
    # make sure the deps from orc are met and up-to-date
    - pip3 install --user -U pip -rtools/ci/requirements.txt

build_cli:
  stage: build
  script:
    - tools/ci/orc build --image=tessia-cli --tag=${COMMIT_SHA}

build_engine:
  stage: build
  script:
    - tools/ci/orc build --image=tessia-engine --tag=${COMMIT_SHA}

unittests_engine:
  stage: unittests
  script:
    - tools/ci/orc unittest --image=tessia-engine --tag=${COMMIT_SHA}

clitests:
  stage: clitests
  script:
    - tools/ci/orc clitest --tag=${COMMIT_SHA} --fieldtests=/home/tessia-builder/field_tests --baselibfile=/home/tessia-builder/cfg/tessia_baselib.yaml

push:
  stage: push
  script:
    - tools/ci/orc push --tag=${COMMIT_SHA} --registry=${REGISTRY}
  only:
    - master

cleanup:
  stage: cleanup
  script:
    - tools/ci/orc cleanup --tag=${COMMIT_SHA}
  when: always
